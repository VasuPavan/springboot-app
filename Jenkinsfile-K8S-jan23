pipeline {
    tools {
        maven 'maven3'
    }
    agent any
    environment {
        registry = "299122726347.dkr.ecr.us-east-1.amazonaws.com/eks_repo"
    }
   
    stages {
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/akannan1087/springboot-app']]])     
            }
        }
       stage ('Build') {
          steps {
            sh 'mvn clean install'           
            }
        }
    // Building Docker images
        stage('Building image') {
          steps{
            script {
              dockerImage = docker.build registry 
            }
          }
        }
        
    // Uploading Docker images into AWS ECR
        stage('Pushing to ECR') {
          steps{  
            script {
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 299122726347.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker push 299122726347.dkr.ecr.us-east-1.amazonaws.com/eks_repo:latest'
            }
          }
        }
        
        stage('K8S Deploy') {
          steps{   
            script {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'k8s', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                    sh ('kubectl apply -f  eks-deploy-k8s.yaml')

                }
            }
          }
        }
    }    
   
}
